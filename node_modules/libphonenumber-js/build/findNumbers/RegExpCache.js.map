{"version":3,"sources":["../../source/findNumbers/RegExpCache.js"],"names":["RegExpCache","size","cache","pattern","regExp","get","RegExp","put"],"mappings":";;;;;;;;AAAA;;;;;;;;AAEA;AACA;AACA;AACA;IACqBA,W;AACpB,sBAAYC,IAAZ,EAAkB;AAAA;;AACjB,OAAKC,KAAL,GAAa,uBAAaD,IAAb,CAAb;AACA;;;;sCAEmBE,O,EAAS;AAC5B,OAAIC,SAAS,KAAKF,KAAL,CAAWG,GAAX,CAAeF,OAAf,CAAb;AACA,OAAI,CAACC,MAAL,EAAa;AACZA,aAAS,IAAIE,MAAJ,CAAW,MAAMH,OAAjB,CAAT;AACA,SAAKD,KAAL,CAAWK,GAAX,CAAeJ,OAAf,EAAwBC,MAAxB;AACA;AACD,UAAOA,MAAP;AACA;;;;;;kBAZmBJ,W","file":"RegExpCache.js","sourcesContent":["import LRUCache from './LRUCache'\r\n\r\n// A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3\r\n// countries being used for the same doc with ~10 patterns for each country. Some pages will have\r\n// a lot more countries in use, but typically fewer numbers for each so expanding the cache for\r\n// that use-case won't have a lot of benefit.\r\nexport default class RegExpCache {\r\n\tconstructor(size) {\r\n\t\tthis.cache = new LRUCache(size)\r\n\t}\r\n\r\n\tgetPatternForRegExp(pattern) {\r\n\t\tlet regExp = this.cache.get(pattern)\r\n\t\tif (!regExp) {\r\n\t\t\tregExp = new RegExp('^' + pattern)\r\n\t\t\tthis.cache.put(pattern, regExp)\r\n\t\t}\r\n\t\treturn regExp\r\n\t}\r\n}"]}